import cx_Oracle

# Connect to the Oracle database
connection = cx_Oracle.connect('username/password@host:port/service_name')

# Create a cursor
cursor = connection.cursor()

# Read the SQL script
with open('db_actions.sql', 'r') as f:
    sql_script = f.read()

# Execute the SQL script
cursor.execute(sql_script)

# Fetch all output files generated by the script
output_files = cursor.fetchall()

# Iterate through the output files and write their contents to separate .sql files
for file_name, ddl_content in output_files:
    # Write the DDL content to a separate .sql file
    with open(file_name, 'w') as output_file:
        output_file.write(ddl_content)

# Close cursor and connection
cursor.close()
connection.close()



========

DECLARE
   DIRECTORY_PATH VARCHAR2(100) := 'C:/sql';
BEGIN
   FOR s IN (SELECT sequence_name FROM dba_sequences) LOOP
      -- Get sequence DDL
      DECLARE
         ddl CLOB;
         file_name VARCHAR2(100);
         file_handle UTL_FILE.FILE_TYPE;
      BEGIN
         ddl := DBMS_METADATA.get_ddl('SEQUENCE',s.sequence_name);
         file_name := DIRECTORY_PATH || '/SEQUENCE_' || s.sequence_name || '.sql';
         file_handle := UTL_FILE.fopen(DIRECTORY_PATH, file_name, 'w');
         UTL_FILE.put_line(file_handle, ddl);
         UTL_FILE.fclose(file_handle);
         DBMS_OUTPUT.put_line(file_name); -- Output file name
      EXCEPTION
         WHEN OTHERS THEN
            DBMS_OUTPUT.put_line('Error processing sequence ' || s.sequence_name || ': ' || SQLERRM);
      END;
   END LOOP;

   -- Similar loops for other database objects like synonyms, database links, tablespaces, and tables

   -- For Synonyms
   FOR syn IN (SELECT synonym_name FROM dba_synonyms) LOOP
      DECLARE
         ddl CLOB;
         file_name VARCHAR2(100);
         file_handle UTL_FILE.FILE_TYPE;
      BEGIN
         ddl := DBMS_METADATA.get_ddl('SYNONYM',syn.synonym_name);
         file_name := DIRECTORY_PATH || '/SYNONYM_' || syn.synonym_name || '.sql';
         file_handle := UTL_FILE.fopen(DIRECTORY_PATH, file_name, 'w');
         UTL_FILE.put_line(file_handle, ddl);
         UTL_FILE.fclose(file_handle);
         DBMS_OUTPUT.put_line(file_name); -- Output file name
      EXCEPTION
         WHEN OTHERS THEN
            DBMS_OUTPUT.put_line('Error processing synonym ' || syn.synonym_name || ': ' || SQLERRM);
      END;
   END LOOP;

   -- For Database Links
   FOR dblink_rec IN (SELECT db_link FROM dba_db_links) LOOP
      DECLARE
         ddl CLOB;
         file_name VARCHAR2(100);
         file_handle UTL_FILE.FILE_TYPE;
      BEGIN
         ddl := DBMS_METADATA.get_ddl('DB_LINK',dblink_rec.db_link);
         file_name := DIRECTORY_PATH || '/DB_LINK_' || dblink_rec.db_link || '.sql';
         file_handle := UTL_FILE.fopen(DIRECTORY_PATH, file_name, 'w');
         UTL_FILE.put_line(file_handle, ddl);
         UTL_FILE.fclose(file_handle);
         DBMS_OUTPUT.put_line(file_name); -- Output file name
      EXCEPTION
         WHEN OTHERS THEN
            DBMS_OUTPUT.put_line('Error processing database link ' || dblink_rec.db_link || ': ' || SQLERRM);
      END;
   END LOOP;

   -- For Tablespaces
   FOR tblspace IN (SELECT tablespace_name FROM dba_tablespaces) LOOP
      DECLARE
         ddl CLOB;
         file_name VARCHAR2(100);
         file_handle UTL_FILE.FILE_TYPE;
      BEGIN
         ddl := DBMS_METADATA.get_ddl('TABLESPACE',tblspace.tablespace_name);
         file_name := DIRECTORY_PATH || '/TABLESPACE_' || tblspace.tablespace_name || '.sql';
         file_handle := UTL_FILE.fopen(DIRECTORY_PATH, file_name, 'w');
         UTL_FILE.put_line(file_handle, ddl);
         UTL_FILE.fclose(file_handle);
         DBMS_OUTPUT.put_line(file_name); -- Output file name
      EXCEPTION
         WHEN OTHERS THEN
            DBMS_OUTPUT.put_line('Error processing tablespace ' || tblspace.tablespace_name || ': ' || SQLERRM);
      END;
   END LOOP;

   -- For Tables
   FOR table_def IN (SELECT table_name FROM dba_tables) LOOP
      DECLARE
         ddl CLOB;
         file_name VARCHAR2(100);
         file_handle UTL_FILE.FILE_TYPE;
      BEGIN
         ddl := DBMS_METADATA.get_ddl('TABLE',table_def.table_name);
         file_name := DIRECTORY_PATH || '/TABLE_' || table_def.table_name || '.sql';
         file_handle := UTL_FILE.fopen(DIRECTORY_PATH, file_name, 'w');
         UTL_FILE.put_line(file_handle, ddl);
         UTL_FILE.fclose(file_handle);
         DBMS_OUTPUT.put_line(file_name); -- Output file name
      EXCEPTION
         WHEN OTHERS THEN
            DBMS_OUTPUT.put_line('Error processing table ' || table_def.table_name || ': ' || SQLERRM);
      END;
   END LOOP;
END;
/

