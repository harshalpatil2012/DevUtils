import time
import os
import pytesseract
from PIL import Image
import cv2
import pyautogui
import subprocess
import logging
from logging.handlers import RotatingFileHandler
import numpy as np

# Paths
TESSERACT_PATH = r"C:/Program Files/Tesseract-OCR/tesseract.exe"
LOG_PATH = r"D:/GitHubProjects/DevUtils/screencapture/capture.log"
APP_LOG_PATH = r"D:/GitHubProjects/DevUtils/screencapture/app.log"
LOCAL_IMG_PATH = r"D:/GitHubProjects/DevUtils/screencapture/screen_capture.png" 
REPO_PATH = r"D:\GitHubProjects\DevUtils\screencapture"

# Tesseract setup
pytesseract.pytesseract.tesseract_cmd = TESSERACT_PATH
custom_config = r'--oem 3 --psm 6'

# Logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger("ScreenCaptureLogger")
handler = RotatingFileHandler(APP_LOG_PATH, maxBytes=5000000, backupCount=5)
logger.addHandler(handler)

# Image preprocessing
def preprocess_image(image):
    # ... (Your existing preprocess_image function)

# Capture and OCR
def capture_and_ocr():
    # ... (Your existing capture_and_ocr function)

# Upload to Git
def upload_to_git(text):
    try:
        os.chdir(REPO_PATH)

        with open(LOG_PATH, 'a', encoding='utf-8') as f:
            f.write("\n----------------- SEPARATOR -----------------\n")
            f.write(text)

        subprocess.call(["git", "add", LOG_PATH])
        subprocess.call(["git", "commit", "-m", "Updated screen capture log"])
        subprocess.call(["git", "push"])
        logger.info("Successfully committed and pushed to GitHub")
    except Exception as e:
        logger.error(f"Failed to commit and push: {str(e)}")

# Main loop
if __name__ == '__main__':
    while True:
        logger.info("Capturing screen...")
        text = capture_and_ocr()
        if text:
            logger.info("Uploading to Git...")
            upload_to_git(text)
        else:
            logger.warning("No text detected in the screen capture.")
        time.sleep(30)
----------------- SEPARATOR -----------------
moo sade now. ' :
Type "help", "copyright", “credits” or “license” for more information.
>>>
KeyboardInterrupt
>>> AZAZAX
KeyboardInterrupt
>>> AZ
D:\GitHubProjects\DevUtils\screencapture>python screen_capture. py
Usage: ‘screen_capture.py [options] install|update|remove|start [...]|stop|restart [...]|debug [...]
Options for ‘install’ and ‘update’ commands only:
--username domain\username : The Username the service is to run under
--password password : The password for the username
--startup [manual|auto|disabled|delayed] : How the service starts, default = manual
--interactive : Allow the service to interact with the desktop
--perfmonini file: .ini file to use for registering performance monitor data
--perfmondll file: .dll file to use when querying the service for
performance data, default = perfmondata.dll
Options for ‘start’ and ‘stop’ commands only:
--wait seconds: Wait for the service to actually start or stop.
If you specify --wait with the ‘stop’ option, the service
and all dependent services will be stopped, each waiting
the specified period.
D:\GitHubProjects\DevUtils\screencapture>python screen_capture. py
[main ad4ec74] Updated screen capture log
1 file changed, 39 insertions(+)
create mode 100644 screencapture/capture. log
fatal: User cancelled dialog.
Username for "https://github.com’: tTraceback (most recent call last)
File "D:\GitHubProjects\DewUtils\screencapture\screen_capture.py", line 68, in <module>
except Exception as e:
File "D:\GitHubProjects\DevUtils\screencapture\screen_capture.py", line 58, in upload_to_git
os. chdir(REPO_PATH)
File "C:\Users\harsh\AppData\Local \Programs\Python\Python311\Lib\subprocess.py", line 391, in call
return p.wait(timeout=timeout)
File "C:\Users\harsh\AppData\Local \Programs\Python\Python311\Lib\subprocess.py", line 1264, in wait
return self._wait(timeout=timeout)
File "C:\Users\harsh\AppData\Local \Programs\Python\Python311\Lib\subprocess.py", line 1588, in wait
result = _winapi.WaitForSingleObject(self._handle,
KeyboardInterrupt
“C
D:\GitHubProjects\DevUtils\screencapture>python screen_capture. py
as so bom s & & 4 4 @ . Bo ve
