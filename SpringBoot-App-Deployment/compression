<dependencies>
    <!-- Spring Boot Starter for Brotli -->
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-brotli</artifactId>
    </dependency>

    <!-- Spring Boot Starter for Gzip -->
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-tomcat</artifactId>
    </dependency>
</dependencies>


Gzip Compression:

Include the spring-boot-starter-tomcat dependency in your pom.xml.

Add the following configuration in your application.yml:

yaml

server:
  compression:
    enabled: true
    mime-types: application/json
    min-response-size: 10KB


import org.springframework.web.reactive.function.client.WebClient;
import java.lang.management.ManagementFactory;
import java.lang.management.OperatingSystemMXBean;
import org.springframework.http.MediaType;

public class GzipCpuUsageTest {

    private WebClient webClient;

    public GzipCpuUsageTest() {
        this.webClient = WebClient.builder()
                .baseUrl("http://provider-service-endpoint")
                .build();
    }

    public void performTest(boolean useGzip) {
        WebClient.RequestHeadersSpec<?> requestSpec = this.webClient.get().uri("/large-response");

        if (useGzip) {
            requestSpec.header("Accept-Encoding", "gzip");
        } else {
            requestSpec.accept(MediaType.APPLICATION_JSON);
        }

        for (int i = 0; i < 10000; i++) { // Simulate 10,000 requests
            requestSpec.retrieve()
                    .bodyToMono(String.class)
                    .block();
        }
    }

    public double getCpuUsage() {
        OperatingSystemMXBean osBean = ManagementFactory.getPlatformMXBean(OperatingSystemMXBean.class);
        return osBean.getSystemLoadAverage();
    }

    public static void main(String[] args) {
        GzipCpuUsageTest test = new GzipCpuUsageTest();

        // Preliminary test phase without GZIP
        System.out.println("Starting preliminary test without GZIP...");
        double cpuBeforeJson = test.getCpuUsage();
        test.performTest(false);
        double cpuAfterJson = test.getCpuUsage();
        System.out.println("CPU Usage Before JSON Test: " + cpuBeforeJson);
        System.out.println("CPU Usage After JSON Test: " + cpuAfterJson);

        // Main test phase with GZIP
        System.out.println("Starting main test with GZIP...");
        double cpuBeforeGzip = test.getCpuUsage();
        test.performTest(true);
        double cpuAfterGzip = test.getCpuUsage();
        System.out.println("CPU Usage Before GZIP Test: " + cpuBeforeGzip);
        System.out.println("CPU Usage After GZIP Test: " + cpuAfterGzip);
    }
}
