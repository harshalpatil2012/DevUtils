import java.time.Duration;

@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
@ActiveProfiles("test")
public class CompressionTests {

    @Autowired
    private WebTestClient webTestClient;

    @Test
    public void testCompression() {
        webTestClient.mutate().responseTimeout(Duration.ofSeconds(10)) // Setting a higher timeout
            .build().get().uri("/your-endpoint")
            .exchange()
            .expectHeader().exists("Content-Encoding")
            .expectHeader().isEqualTo("Content-Encoding", "gzip");
    }
}


@Query(value = "SELECT /*+ PARALLEL(e, 4) */ e.* FROM Employee e",
           countQuery = "SELECT count(*) FROM Employee",
           nativeQuery = true)
    Page<Employee> findAllWithParallelHint(Pageable pageable);
