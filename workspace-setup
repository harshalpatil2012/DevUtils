# Specify the path for the log file
$logFilePath = "C:\logs\install.log"

# Initialize variables for tracking installation status
$installedSoftware = @()
$skippedSoftware = @()
$failedSoftware = @()

# Display and write to log file
foreach ($deployment in $allDeployments) {
    try {
        $message = "Software: $($deployment.PackageID), Deployment ID: $($deployment.DeploymentID)"
        Write-Host $message
        Add-Content -Path $logFilePath -Value $message
    } catch {
        $errorMessage = "Error logging deployment information: $_"
        Write-Host $errorMessage
        Add-Content -Path $logFilePath -Value $errorMessage
    }
}

# Specify the list of software for deployment
$softwareToDeploy = @("Software1", "Software2", "Software3")

# Start deployment for the specified software
foreach ($softwareName in $softwareToDeploy) {
    $deploymentID = $allDeployments | Where-Object {$_.PackageID -eq $softwareName} | Select-Object -ExpandProperty DeploymentID

    # Check if software is already installed
    if (Get-Command $softwareName -ErrorAction SilentlyContinue) {
        $message = "Software $softwareName is already installed. Skipping deployment."
        Write-Host $message
        Add-Content -Path $logFilePath -Value $message
        $skippedSoftware += $softwareName
    } else {
        try {
            Write-Host "Starting deployment for $softwareName with Deployment ID $deploymentID"
            Start-Process -FilePath "msiexec.exe" -ArgumentList "/i", "$($deploymentID)", "/qn" -Wait
            $installedSoftware += $softwareName
        } catch {
            $message = "Failed to deploy $softwareName. Error: $_"
            Write-Host $message
            Add-Content -Path $logFilePath -Value $message
            $failedSoftware += $softwareName
        }
    }
}

# Display final summary in the console
Write-Host "----- Deployment Summary -----"
Write-Host "Installed Software: $($installedSoftware -join ', ')"
Write-Host "Skipped Software (Already Installed): $($skippedSoftware -join ', ')"
Write-Host "Failed Software: $($failedSoftware -join ', ')"
Write-Host "-----------------------------"

# Log final summary to the log file
Add-Content -Path $logFilePath -Value "----- Deployment Summary -----"
Add-Content -Path $logFilePath -Value "Installed Software: $($installedSoftware -join ', ')"
Add-Content -Path $logFilePath -Value "Skipped Software (Already Installed): $($skippedSoftware -join ', ')"
Add-Content -Path $logFilePath -Value "Failed Software: $($failedSoftware -join ', ')"
Add-Content -Path $logFilePath -Value "-----------------------------"
